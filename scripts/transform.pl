#!/usr/bin/perl
#
# !!begin
# !!title   Works out relative translation and rotation of CCDs 
# !!author  T.R.Marsh
# !!created 28 June 2004
# !!root    transform
# !!index   transform
# !!descr   Works out the relative translation and rotation of CCDs 
# !!class   Scripts
# !!class   Observing
# !!css     ultracam.css
# !!head1   transform -- works out relative translation and rotation of CCDs
# 
# Inside !!ref{rtplot.html}{rtplot} one can plot the positions of CCD defects, potentially useful
# during setup. By design all defects are plotted on all CCDs which requires
# knowledge of relative orientations. This is to allow you to carry out the setup 
# with just one chip. This script gives you this by reading in a suitable aperture file. 
# This is one in which you have identified the same pair of stars on each CCD and have given 
# them the same aperture numbers for each CCD (which are inputs for this routine). The program 
# then loads them in and computes a relative translation, rotation and scale factor. You should of course 
# try to choose well separated stars. The program will report the separation of the two 
# stars in pixels to help you.
#
#
# !!head2 Arguments:
#
# !!table
# !!arg{input}{input aperture file} 
# !!arg{star1}{Aperture number of star 1}
# !!arg{star2}{Aperture number of star 2}
# !!arg{output}{Output transformation file}
# !!table
#
# !!end

(@ARGV == 4) or die "usage: input star1 star2 output\n";

$input  = shift;
$star1  = shift;
$star2  = shift;
$output = shift;

open(INPUT, "$input")    or die "Failed to open $input for input\n";
while(<INPUT>){
    if(/^CCD *(\d*)/){
	$nccd = $1;
    }
    if(/^Aperture *(\d*)/){
	$naper = $1;
    }
    if(/^x,y = (\S*?), (\S*?); x_off,y_off = (\S*?), (\S*);/){
	$x{$nccd}{$naper} = $1 + $3;
	$y{$nccd}{$naper} = $2 + $4;
    }
}
close(INPUT);

for($nccd=1; $nccd<=3; $nccd++){
    (defined $x{$nccd}{$star1} && defined $x{$nccd}{$star2}) or die "CCD $nccd, aperture $star1 or $star2 not defined\n";
}

$length = sqrt(($x{"1"}{$star2}-$x{"1"}{$star1})**2 + ($y{"1"}{$star2}-$y{"1"}{$star1})**2);
$angle  = atan2($y{"1"}{$star2}-$y{"1"}{$star1}, $x{"1"}{$star2}-$x{"1"}{$star1});

print "Separation between the stars = $length pixels\n";

open(OUTPUT, ">$output") or die "Failed to open $output for output\n";
print OUTPUT <<END;
#
# This file was generated by the Perl script transform.pl from two stars
# of an aperture file. It lists the scale factor, rotation angle
# in degrees and x,y translation of each CCD to get from the coordinates of 
# the first CCD to any of the others via the prescription:
# 
# new = scale*rotation*old + translation
#
# This file can be read by the program 'rtplot' in order to translate defects
# between CCDs.
#
END

for($nccd=1; $nccd<=3; $nccd++){
    $scale   = sqrt(($x{$nccd}{$star2}-$x{$nccd}{$star1})**2+($y{$nccd}{$star2}-$y{$nccd}{$star1})**2) / $length;
    $dangle  = atan2( $y{$nccd}{$star2}-$y{$nccd}{$star1}, $x{$nccd}{$star2}-$x{$nccd}{$star1}) - $angle;
    $cos     = cos($dangle);
    $sin     = sin($dangle);
    $dx      = $x{$nccd}{$star1} - $scale*($cos*$x{"1"}{$star1} - $sin*$y{"1"}{$star1});
    $dy      = $y{$nccd}{$star1} - $scale*($sin*$x{"1"}{$star1} + $cos*$y{"1"}{$star1});
    $dangle  = 45.*$dangle/atan2(1.,1.);
    print OUTPUT "$scale $dangle $dx $dy\n"; 
}
close(OUTPUT);

exit;
